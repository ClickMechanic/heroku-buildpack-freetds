#!/usr/bin/env ruby

# sync output
$stdout.sync = true

BUILD_DIR = ARGV[0]
CACHE_DIR = ARGV[1]
ARCHIVE_NAME = "freetds-patched"

puts "-----> FreeTDS building in #{BUILD_DIR}"

puts "-----> Removing any previously cached FreeTDS"
puts `find {CACHE_DIR} -type d -maxdepth 1 -name "freetds-[0-9]\.*" -exec rm -rv {} +`

puts "-----> Fetching & Extracting FreeTDS"
puts `mkdir -p #{CACHE_DIR}`
puts `curl ftp://ftp.freetds.org/pub/freetds/stable/#{ARCHIVE_NAME}.tar.gz -o - | tar -xz -C #{CACHE_DIR} -f -`

TARGET_DIR = `ls #{CACHE_DIR} | grep 'freetds-[0-9]\.'`.chomp
puts "installing #{TARGET_DIR}"

puts "-----> Configurating FreeTDS"
puts `mkdir -p #{BUILD_DIR}/vendor/freetds`
puts `cd #{CACHE_DIR}/#{TARGET_DIR} && ./configure --prefix=#{BUILD_DIR}/vendor/freetds --with-libiconv-prefix=DIR --with-openssl=DIR --with-tdsver=7.3`

puts "-----> Building FreeTDS"
puts `cd #{CACHE_DIR}/#{TARGET_DIR} && make`

puts "-----> Installing FreeTDS into #{BUILD_DIR}/vendor/freetds"
puts `mkdir -p #{BUILD_DIR}/vendor/freetds`
puts `cd #{CACHE_DIR}/#{TARGET_DIR} && make install`

puts "-----> Copying FreeTDS into /app/vendor/freetds"
puts `cp -r #{BUILD_DIR}/vendor/freetds /app/vendor/freetds`

puts "-----> Writing FreeTDS configuration for subsequent buildpack"

File.open("export", "a") do |file|
  file.write("export FREETDS_DIR=/app/vendor/freetds")
end
